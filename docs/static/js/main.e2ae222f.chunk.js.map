{"version":3,"sources":["Constants.tsx","Components/PlaceHolder.tsx","Components/Content/Components/DataInput.tsx","Components/Content/Components/Page.tsx","Components/Content/Components/HorizontalPageContainer.tsx","Components/Content/Components/Selection.tsx","Components/Content/Content.tsx","Components/Header/Components/HeaderCorner.tsx","Components/Header/Components/CellsContainer.tsx","Commons/utils.ts","Components/Header/Components/HeaderCell.tsx","Components/Header/Components/HeaderPage.tsx","Components/Header/HeaderHorizontal.tsx","Components/Header/HeaderVertical.tsx","SpreadSheet.tsx","index.tsx"],"names":["DirectionType","HeaderHorizontalHeight","HeaderVerticalWidth","CellHeight","CellWidth","RowsPerPage","ColumnsPerPage","PageHeight","PageWidth","PlaceHolder","this","props","type","pageNum","style","HORIZONTAL","float","height","width","React","Component","DataInput","inputRef","isSubmit","componentDidMount","current","focus","componentDidUpdate","componentWillUnmount","setData","columnIndex","rowIndex","state","value","handleChange","e","setState","target","handleBlur","submit","handleKeyDown","key","undefined","initialValue","getData","createRef","position","left","top","backgroundColor","ref","padding","paddingLeft","lineHeight","background","outline","border","onChange","onKeyDown","onBlur","Page","rowsNum","columnsNum","horizontalIndex","verticalIndex","GridHorizontalLine","getLines","lines","i","push","boxSizing","borderBottom","bottom","right","GridVerticalLine","borderRight","GridValues","getDiv","x","y","values","j","v","HorizontalPageContainer","currentHorizontalIndex","preloadHorizontalNum","verticalPageIndex","PHHorizontalPageNum","endHorizontalPage","pages","Selection","getSelection","selectedTop","selectedBottom","selectedLeft","selectedRight","marginTop","Content","inputInitialValue","document","addEventListener","onKeyPress","removeEventListener","handleMouseDown","preventDefault","isInputing","content","contentRef","Math","floor","clientX","getBoundingClientRect","scrollLeft","clientY","scrollTop","changeSelection","window","onMouseMove","onMouseUp","handleDoubleClick","prev","inputColumnIndex","inputRowIndex","handleInputSubmit","currentVerticalIndex","preloadVerticalNum","PHVerticalPageNum","endVerticalPage","pageRows","overflow","onScroll","onMouseDown","onDoubleClick","VERTICAL","HeaderCorner","CellsContainer","headerRef","holdPagesNum","children","ACode","charCodeAt","toName","index","columnName","length","String","fromCharCode","HeaderCell","selectedStyle","commonStyle","fontSize","textAlign","color","fontWeight","selectedStart","selectedEnd","min","max","HeaderPage","startIndex","cellsNum","cells","HeaderHorizontal","currentPageIndex","preloadPageNum","placeHolderPageNum","endPageIndex","HeaderVertical","SpreadSheet","horizontalHeaderRef","verticalHeaderRef","topSpacing","bottomSpacing","leftSpacing","rightSpacing","useAsCurrent","updateSelection","updateData","s","updateDisplayRange","scrollX","scrollY","clientWidth","clientHeight","handleScroll","hHeader","vHeader","scrollTo","App","data","Array","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e2ae222f.chunk.js","sourcesContent":["// Size of the headers and cells\r\nexport const HeaderHorizontalHeight = 20;\r\nexport const HeaderVerticalWidth = 40;\r\nexport const CellHeight = 23;\r\nexport const CellWidth = 80;\r\n\r\n// Number of rows and columns per page\r\nexport const RowsPerPage = 50;\r\nexport const ColumnsPerPage = 20;\r\n\r\n// Size of page\r\nexport const PageHeight = RowsPerPage * CellHeight;\r\nexport const PageWidth = ColumnsPerPage * CellWidth;\r\n\r\n// Type of element\r\nexport enum DirectionType {\r\n    VERTICAL,\r\n    HORIZONTAL\r\n}","import React from \"react\";\r\n\r\nimport { DirectionType, PageHeight, PageWidth } from \"../Constants\";\r\n\r\ninterface IPlaceHolderProp {\r\n    type: DirectionType,\r\n    pageNum: number\r\n}\r\n\r\nclass PlaceHolder extends React.Component<IPlaceHolderProp> {\r\n    render() {\r\n        const {type, pageNum} = this.props;\r\n        return (\r\n            <div style= {type === DirectionType.HORIZONTAL ? {\r\n                float: \"left\",\r\n                height: 1,\r\n                width: pageNum * PageWidth,\r\n            } : {\r\n                height: pageNum * PageHeight,\r\n                width: 1\r\n            }\r\n        }></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlaceHolder;","import React from \"react\";\r\nimport { CellHeight, CellWidth } from \"../../../Constants\";\r\n\r\ninterface IDataInputProp {\r\n    getData: Function,\r\n    setData: Function,\r\n    rowIndex: number,\r\n    columnIndex: number,\r\n    initialValue: any,\r\n\r\n    submit: Function\r\n}\r\n\r\ninterface IDataInputState {\r\n    value: any\r\n}\r\n\r\nclass DataInput extends React.Component<IDataInputProp, IDataInputState> {\r\n    inputRef: React.RefObject<HTMLInputElement>;\r\n    isSubmit = true;\r\n\r\n    constructor(props: IDataInputProp) {\r\n        super(props);\r\n        this.state = {\r\n            value: this.props.initialValue === undefined ? (props.getData(props.columnIndex, props.rowIndex) === null ? '' :\r\n                props.getData(props.columnIndex, props.rowIndex)) : this.props.initialValue\r\n        }\r\n        this.inputRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.inputRef.current!.focus();\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        this.inputRef.current!.focus();\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.isSubmit)\r\n        this.props.setData(this.props.columnIndex, this.props.rowIndex, this.state.value === '' ? null : this.state.value);\r\n    }\r\n\r\n    handleChange = (e: any) => {\r\n        this.setState({\r\n            value: e.target.value\r\n        })\r\n    }\r\n\r\n    handleBlur = () => {\r\n        this.props.submit(\"Escape\");\r\n    }\r\n\r\n    handleKeyDown = (e: React.KeyboardEvent) => {\r\n        if (e.key === \"Enter\" || e.key === \"Tab\" \r\n            || e.key === \"ArrowDown\" || e.key === \"ArrowUp\") {\r\n            this.props.submit(e.key);\r\n        } else if (e.key === \"Escape\") {\r\n            this.isSubmit = false;\r\n            this.props.submit(e.key);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { rowIndex, columnIndex } = this.props;\r\n\r\n        return (\r\n            <div\r\n                style={{\r\n                    position: \"absolute\",\r\n                    left: (columnIndex - 1) * CellWidth,\r\n                    top: (rowIndex - 1) * CellHeight,\r\n                    width: CellWidth - 1,\r\n                    height: CellHeight - 1,\r\n                    backgroundColor: \"rgb(240, 240, 240)\"\r\n                }}\r\n            >\r\n\r\n                <input type={\"text\"}\r\n                    ref={this.inputRef}\r\n                    style={{\r\n                        height: \"100%\",\r\n                        width: CellWidth - 3,\r\n                        padding: 0,\r\n                        paddingLeft: 2,\r\n                        lineHeight: CellHeight - 1,\r\n                        background: \"none\",\r\n                        outline: \"none\",\r\n                        border: \"none\"\r\n                    }}\r\n                    value={this.state.value}\r\n                    onChange={this.handleChange}\r\n                    onKeyDown={this.handleKeyDown}\r\n                    onBlur={this.handleBlur}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataInput;","import React from \"react\";\r\nimport { CellHeight, CellWidth, ColumnsPerPage, PageHeight, PageWidth, RowsPerPage } from \"../../../Constants\";\r\n\r\ninterface IPageProp {\r\n    horizontalIndex: number,\r\n    verticalIndex: number,\r\n    getData: Function\r\n}  \r\n\r\nclass Page extends React.Component<IPageProp> {\r\n    render() {\r\n        return (\r\n            <div \r\n                style={{\r\n                    position: \"relative\",\r\n                    float: \"left\",\r\n                    height: PageHeight,\r\n                    width: PageWidth\r\n                }}\r\n            >\r\n\r\n                <GridHorizontalLine rowsNum={RowsPerPage} />\r\n                <GridVerticalLine columnsNum={ColumnsPerPage} />\r\n                <GridValues getData={this.props.getData} horizontalIndex={this.props.horizontalIndex} verticalIndex={this.props.verticalIndex} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Page;\r\n\r\n/**\r\n * 水平线\r\n */\r\nclass GridHorizontalLine extends React.Component <{\r\n    rowsNum: number\r\n}> {\r\n    getLines = () => {\r\n        let lines = [];\r\n        for (let i = 1; i <= this.props.rowsNum; i++) {\r\n            lines.push(<div\r\n                    key={i}\r\n                    style={{\r\n                        height: CellHeight,\r\n                        width: \"100%\",\r\n                        boxSizing: \"border-box\",\r\n                        borderBottom: \"1px solid #dfdfdf\"\r\n                    }}                \r\n                ></div>)\r\n        }\r\n        return lines;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div\r\n                style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    left: 0,\r\n                    right: 0\r\n                }}\r\n            >\r\n                {this.getLines()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n/**\r\n * 垂直线\r\n */\r\nclass GridVerticalLine extends React.Component<{\r\n    columnsNum: number\r\n}> {\r\n    getLines = () => {\r\n        let lines = [];\r\n        for (let i = 1; i <= this.props.columnsNum; i++) {\r\n            lines.push(<div\r\n                    key={i}\r\n                    style={{\r\n                        float: \"left\",\r\n                        height: \"100%\",\r\n                        width: CellWidth,\r\n                        boxSizing: \"border-box\",\r\n                        borderRight: \"1px solid #dfdfdf\"\r\n                    }}                \r\n                ></div>)\r\n        }\r\n        return lines;\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    left: 0,\r\n                    right: 0\r\n                }}\r\n            >\r\n                {this.getLines()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n/**\r\n * 数据容器\r\n */\r\nclass GridValues extends React.Component<{\r\n    getData: Function,\r\n    horizontalIndex: number,\r\n    verticalIndex: number\r\n}> {\r\n\r\n    getDiv = (x: number, y: number, value: any) => (\r\n        <div\r\n            key={\"x-\" + x + \"-y-\" + y}\r\n            style={{\r\n                position: \"absolute\",\r\n                left: (x - 1) * CellWidth,\r\n                top: (y - 1) * CellHeight,\r\n                height: CellHeight,\r\n                width: CellWidth - 4,\r\n                padding: \"0px 2px 0px 2px\",\r\n                lineHeight: CellHeight + \"px\"\r\n            }}\r\n        >\r\n            {value}\r\n        </div>\r\n    );\r\n\r\n    render() {\r\n        const {horizontalIndex, getData, verticalIndex} = this.props;\r\n\r\n        let values = [];\r\n        for (let i = 1; i <= ColumnsPerPage; i++) {\r\n            for (let j = 1; j <= RowsPerPage; j++) {  \r\n                let v = getData(\r\n                    (horizontalIndex - 1) * ColumnsPerPage + i,\r\n                    (verticalIndex - 1) * RowsPerPage + j\r\n                );\r\n                if (v !== null) {\r\n                    values.push(this.getDiv(i, j, v));\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div\r\n            style={{\r\n                position: \"absolute\",\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n            }}\r\n            >\r\n                {values}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { DirectionType, PageHeight, PageWidth } from \"../../../Constants\";\r\nimport PlaceHolder from \"../../PlaceHolder\";\r\nimport Page from \"./Page\";\r\n\r\ninterface IHPCProp {\r\n    // 该行page的纵向序号\r\n    verticalPageIndex: number,\r\n    // 当前显示的page横向序号\r\n    currentHorizontalIndex: number,\r\n    // 预加载横向page数量\r\n    preloadHorizontalNum: number,\r\n\r\n    getData: Function\r\n}\r\n\r\n/**\r\n * 盛装page的行容器\r\n */\r\nclass HorizontalPageContainer extends React.Component<IHPCProp> {\r\n    render() {\r\n        const { currentHorizontalIndex, preloadHorizontalNum, verticalPageIndex } = this.props;\r\n        // 列占位符所占的page个数\r\n        const PHHorizontalPageNum = currentHorizontalIndex - preloadHorizontalNum - 1 > 0 ?\r\n            currentHorizontalIndex - preloadHorizontalNum - 1 : 0;\r\n        // 起始的列page编号\r\n        const startHorizontalPage = currentHorizontalIndex - preloadHorizontalNum > 0 ?\r\n            currentHorizontalIndex - preloadHorizontalNum : 1;\r\n        // 结束的列page编号\r\n        const endHorizontalPage = currentHorizontalIndex + preloadHorizontalNum;\r\n\r\n        let pages = [];\r\n        for (let i = startHorizontalPage; i <= endHorizontalPage; i++) {\r\n            pages.push(<Page key={i} horizontalIndex={i} verticalIndex={verticalPageIndex} getData={this.props.getData}/>);\r\n        }\r\n\r\n        return (\r\n                <div\r\n                    style={{\r\n                        width: endHorizontalPage * PageWidth,\r\n                        height: PageHeight\r\n                    }}\r\n                >\r\n\r\n                    <PlaceHolder type={DirectionType.HORIZONTAL} pageNum={PHHorizontalPageNum} />\r\n\r\n                    {pages}\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default HorizontalPageContainer;","import React from \"react\";\r\nimport { CellHeight, CellWidth } from \"../../../Constants\";\r\n\r\ninterface ISelectionProp {\r\n    selectedTop: number,\r\n    selectedBottom: number,\r\n    selectedLeft: number,\r\n    selectedRight: number\r\n}\r\n\r\n/**\r\n * 选择框\r\n */\r\nclass Selection extends React.Component<ISelectionProp> {\r\n    getSelection = () => {\r\n        const { selectedTop, selectedBottom, selectedLeft, selectedRight } = this.props;\r\n        if (selectedBottom - selectedTop >= 0) {\r\n            if (selectedRight - selectedLeft >= 0) {\r\n                return (\r\n                    <div\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            top: (selectedTop - 1) * CellHeight - 2,\r\n                            left: (selectedLeft - 1) * CellWidth - 2,\r\n                            padding: 1,\r\n                            border: \"2px solid #2979ff\",\r\n                            height: (selectedBottom - selectedTop + 1) * CellHeight - 3,\r\n                            width: (selectedRight - selectedLeft + 1) * CellWidth - 3\r\n                        }}\r\n                    >\r\n\r\n                        <div style={{\r\n                            height: CellHeight - 2,\r\n                            width: CellWidth - 2,\r\n                            float: \"left\"\r\n                        }}></div>\r\n                        {\r\n                            selectedRight - selectedLeft === 0 ? '' :\r\n                                <div style={{\r\n                                    height: CellHeight - 2,\r\n                                    width: (selectedRight - selectedLeft) * CellWidth - 1,\r\n                                    float: \"left\",\r\n                                    backgroundColor: \"rgba(100, 181, 246, .3)\"\r\n                                }}></div>\r\n                        }\r\n\r\n                        {\r\n                            selectedBottom - selectedTop === 0 ? '' :\r\n                                <div style={{\r\n                                    height: (selectedBottom - selectedTop) * CellHeight - 1,\r\n                                    width: (selectedRight - selectedLeft + 1) * CellWidth - 3,\r\n                                    marginTop: CellHeight - 2,\r\n                                    backgroundColor: \"rgba(100, 181, 246, .3)\"\r\n                                }}></div>\r\n                        }\r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            top: (selectedTop - 1) * CellHeight - 2,\r\n                            left: (selectedRight - 1) * CellWidth - 2,\r\n                            padding: 1,\r\n                            border: \"2px solid #2979ff\",\r\n                            height: (selectedBottom - selectedTop + 1) * CellHeight - 3,\r\n                            width: (selectedLeft - selectedRight + 1) * CellWidth - 3\r\n                        }}\r\n                    >\r\n\r\n                        {\r\n                            selectedRight - selectedLeft === 0 ? '' :\r\n                                <div style={{\r\n                                    height: CellHeight - 2,\r\n                                    width: (selectedLeft - selectedRight) * CellWidth - 1,\r\n                                    float: \"left\",\r\n                                    backgroundColor: \"rgba(100, 181, 246, .3)\"\r\n                                }}></div>\r\n                        }\r\n\r\n                        <div style={{\r\n                            height: CellHeight - 2,\r\n                            width: CellWidth - 2,\r\n                            float: \"left\"\r\n                        }}></div>\r\n\r\n                        {\r\n                            selectedBottom - selectedTop === 0 ? '' :\r\n                                <div style={{\r\n                                    height: (selectedBottom - selectedTop) * CellHeight - 1,\r\n                                    width: (selectedLeft - selectedRight + 1) * CellWidth - 3,\r\n                                    marginTop: CellHeight - 2,\r\n                                    backgroundColor: \"rgba(100, 181, 246, .3)\"\r\n                                }}></div>\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n        } else {\r\n            if (selectedRight - selectedLeft >= 0) {\r\n                return (\r\n                    <div\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            top: (selectedBottom - 1) * CellHeight - 2,\r\n                            left: (selectedLeft - 1) * CellWidth - 2,\r\n                            padding: 1,\r\n                            border: \"2px solid #2979ff\",\r\n                            height: (selectedTop - selectedBottom + 1) * CellHeight - 3,\r\n                            width: (selectedRight - selectedLeft + 1) * CellWidth - 3\r\n                        }}\r\n                    >\r\n\r\n                        {\r\n                            selectedBottom - selectedTop === 0 ? '' :\r\n                                <div style={{\r\n                                    height: (selectedTop - selectedBottom) * CellHeight - 1,\r\n                                    width: (selectedRight - selectedLeft + 1) * CellWidth - 3,\r\n                                    backgroundColor: \"rgba(100, 181, 246, .3)\"\r\n                                }}></div>\r\n                        }\r\n\r\n                        <div style={{\r\n                            height: CellHeight - 2,\r\n                            width: CellWidth - 2,\r\n                            float: \"left\"\r\n                        }}></div>\r\n\r\n                        {\r\n                            selectedRight - selectedLeft === 0 ? '' :\r\n                                <div style={{\r\n                                    height: CellHeight - 2,\r\n                                    width: (selectedRight - selectedLeft) * CellWidth - 1,\r\n                                    float: \"left\",\r\n                                    backgroundColor: \"rgba(100, 181, 246, .3)\"\r\n                                }}></div>\r\n                        }\r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            top: (selectedBottom - 1) * CellHeight - 2,\r\n                            left: (selectedRight - 1) * CellWidth - 2,\r\n                            padding: 1,\r\n                            border: \"2px solid #2979ff\",\r\n                            height: (selectedTop - selectedBottom + 1) * CellHeight - 3,\r\n                            width: (selectedLeft - selectedRight + 1) * CellWidth - 3\r\n                        }}\r\n                    >\r\n\r\n                        {\r\n                            selectedBottom - selectedTop === 0 ? '' :\r\n                                <div style={{\r\n                                    height: (selectedTop - selectedBottom) * CellHeight - 1,\r\n                                    width: (selectedLeft - selectedRight + 1) * CellWidth - 3,\r\n                                    backgroundColor: \"rgba(100, 181, 246, .3)\"\r\n                                }}></div>\r\n                        }\r\n\r\n                        {\r\n                            selectedRight - selectedLeft === 0 ? '' :\r\n                                <div style={{\r\n                                    height: CellHeight - 2,\r\n                                    width: (selectedLeft - selectedRight) * CellWidth - 1,\r\n                                    float: \"left\",\r\n                                    backgroundColor: \"rgba(100, 181, 246, .3)\"\r\n                                }}></div>\r\n                        }\r\n\r\n                        <div style={{\r\n                            height: CellHeight - 2,\r\n                            width: CellWidth - 2,\r\n                            float: \"left\"\r\n                        }}></div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return this.getSelection()\r\n    }\r\n}\r\n\r\nexport default Selection;","import React from 'react'\r\nimport { CellHeight, CellWidth, DirectionType, PageHeight, PageWidth } from '../../Constants';\r\nimport PlaceHolder from '../PlaceHolder';\r\nimport DataInput from './Components/DataInput';\r\nimport HorizontalPageContainer from './Components/HorizontalPageContainer';\r\nimport Selection from './Components/Selection';\r\n\r\ninterface IContentProp {\r\n    contentRef: React.RefObject<HTMLDivElement>,\r\n\r\n    currentHorizontalIndex: number,\r\n    currentVerticalIndex: number,\r\n    preloadHorizontalNum: number,\r\n    preloadVerticalNum: number,\r\n\r\n    onScroll: React.UIEventHandler<HTMLDivElement>,\r\n\r\n    getData: Function,\r\n    setData: Function,\r\n\r\n    changeSelection: Function,\r\n\r\n    selectedTop: number,\r\n    selectedBottom: number,\r\n    selectedLeft: number,\r\n    selectedRight: number\r\n}\r\n\r\ninterface IContentState {\r\n    isInputing: boolean,\r\n    inputRowIndex: number,\r\n    inputColumnIndex: number\r\n}\r\n\r\n\r\nclass Content extends React.Component<IContentProp, IContentState> {\r\n    inputInitialValue: any = undefined;\r\n\r\n    constructor(props: IContentProp) {\r\n        super(props);\r\n        this.state = {\r\n            isInputing: false,\r\n            inputColumnIndex: 1,\r\n            inputRowIndex: 1\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        document.addEventListener(\"keypress\", this.onKeyPress);\r\n        document.addEventListener(\"keydown\", this.onKeyDown);\r\n        this.inputInitialValue = undefined;\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        this.inputInitialValue = undefined;\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        document.removeEventListener(\"keydown\", this.onKeyDown);\r\n    }\r\n\r\n    handleMouseDown = (e: React.MouseEvent) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            isInputing: false\r\n        })\r\n\r\n        const content = this.props.contentRef.current!;\r\n\r\n        const x = Math.floor((e.clientX - content.getBoundingClientRect().x + content.scrollLeft) / CellWidth) + 1;\r\n        const y = Math.floor((e.clientY - content.getBoundingClientRect().y + content.scrollTop) / CellHeight) + 1;\r\n        this.props.changeSelection(y, y, x, x);\r\n\r\n        window.addEventListener(\"mousemove\", this.onMouseMove);\r\n        window.addEventListener(\"mouseup\", this.onMouseUp);\r\n    }\r\n\r\n    onMouseUp = (e: MouseEvent) => {\r\n        e.preventDefault();\r\n\r\n        window.removeEventListener(\"mousemove\", this.onMouseMove);\r\n        window.removeEventListener(\"mouseup\", this.onMouseUp);\r\n    }\r\n\r\n    onMouseMove = (e: MouseEvent) => {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            isInputing: false\r\n        })\r\n\r\n        const content = this.props.contentRef.current!;\r\n\r\n        const x = Math.floor((e.clientX - content.getBoundingClientRect().x + content.scrollLeft) / CellWidth) + 1;\r\n        const y = Math.floor((e.clientY - content.getBoundingClientRect().y + content.scrollTop) / CellHeight) + 1;\r\n        this.props.changeSelection(this.props.selectedTop, y, this.props.selectedLeft, x);\r\n    }\r\n\r\n    handleDoubleClick = (e: React.MouseEvent) => {\r\n        this.setState((prev) => ({\r\n            isInputing: !prev.isInputing\r\n        }));\r\n\r\n        const content = this.props.contentRef.current!;\r\n\r\n        const x = Math.floor((e.clientX - content.getBoundingClientRect().x + content.scrollLeft) / CellWidth) + 1;\r\n        const y = Math.floor((e.clientY - content.getBoundingClientRect().y + content.scrollTop) / CellHeight) + 1;\r\n        this.setState({\r\n            inputColumnIndex: x,\r\n            inputRowIndex: y\r\n        })\r\n    }\r\n\r\n    handleInputSubmit = (key: string) => {\r\n\r\n        if (key === \"Enter\" || key === \"ArrowDown\") {\r\n            this.setState((prev) => ({\r\n                isInputing: false\r\n            }));\r\n        } else if (key === \"Tab\") {\r\n            this.setState((prev) => ({\r\n                isInputing: false\r\n            }));\r\n        } else if (key === \"Escape\") {\r\n            this.setState((prev) => ({\r\n                isInputing: false\r\n            }));\r\n        } else if (key === \"ArrowUp\") {\r\n            this.setState((prev) => ({\r\n                isInputing: false\r\n            }));\r\n        }\r\n    }\r\n\r\n    onKeyDown = (e: KeyboardEvent) => {\r\n\r\n        if (this.state.isInputing) return;\r\n        const { selectedTop, selectedLeft } = this.props;\r\n\r\n        if (e.key === \"Enter\" || e.key === \"ArrowDown\") {\r\n            e.preventDefault();\r\n            this.props.changeSelection(selectedTop + 1, selectedTop + 1, selectedLeft, selectedLeft);\r\n        } else if (e.key === \"ArrowUp\") {\r\n            e.preventDefault();\r\n            this.props.changeSelection(selectedTop - 1, selectedTop - 1, selectedLeft, selectedLeft);\r\n        } else if (e.key === \"ArrowLeft\") {\r\n            e.preventDefault();\r\n            this.props.changeSelection(selectedTop, selectedTop, selectedLeft - 1, selectedLeft - 1);\r\n        } else if (e.key === \"Tab\" || e.key === \"ArrowRight\") {\r\n            e.preventDefault();\r\n            this.props.changeSelection(selectedTop, selectedTop, selectedLeft + 1, selectedLeft + 1);\r\n        } else if (e.key === \"Escape\") {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    onKeyPress = (e: KeyboardEvent) => {\r\n        if (this.state.isInputing) return;\r\n        \r\n        e.preventDefault();\r\n\r\n        const { selectedTop, selectedLeft } = this.props;\r\n\r\n        this.inputInitialValue = e.key;\r\n        this.setState({\r\n            inputRowIndex: this.props.selectedTop,\r\n            inputColumnIndex: this.props.selectedLeft,\r\n            isInputing: true\r\n        });\r\n        this.props.changeSelection(selectedTop, selectedTop, selectedLeft, selectedLeft);\r\n    }\r\n\r\n    render() {\r\n        const { currentVerticalIndex, preloadVerticalNum, currentHorizontalIndex, preloadHorizontalNum } = this.props;\r\n        // 列占位符所占的page个数\r\n        const PHVerticalPageNum = currentVerticalIndex - preloadVerticalNum - 1 > 0 ?\r\n            currentVerticalIndex - preloadVerticalNum - 1 : 0;\r\n        // 起始的列page编号\r\n        const startVerticalPage = currentVerticalIndex - preloadVerticalNum > 0 ?\r\n            currentVerticalIndex - preloadVerticalNum : 1;\r\n        // 结束的列page编号\r\n        const endVerticalPage = currentVerticalIndex + preloadVerticalNum;\r\n        // 结束的行page编号\r\n        const endHorizontalPage = currentHorizontalIndex + preloadHorizontalNum;\r\n\r\n        let pageRows = [];\r\n        for (let i = startVerticalPage; i <= endVerticalPage; i++) {\r\n            pageRows.push(\r\n                <HorizontalPageContainer\r\n                    key={i}\r\n                    verticalPageIndex={i}\r\n                    currentHorizontalIndex={currentHorizontalIndex}\r\n                    preloadHorizontalNum={preloadHorizontalNum}\r\n                    getData={this.props.getData}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div\r\n                ref={this.props.contentRef}\r\n                style={{\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                    overflow: \"scroll\",\r\n                    position: \"relative\"\r\n                }}\r\n                onScroll={this.props.onScroll}\r\n            >\r\n                <div\r\n                    style={{\r\n                        height: endVerticalPage * PageHeight,\r\n                        width: endHorizontalPage * PageWidth\r\n                    }}\r\n                    onMouseDown={this.handleMouseDown}\r\n                    onDoubleClick={this.handleDoubleClick}\r\n                >\r\n\r\n                    <PlaceHolder type={DirectionType.VERTICAL} pageNum={PHVerticalPageNum} />\r\n\r\n                    {pageRows}\r\n\r\n\r\n\r\n                    <Selection\r\n                        selectedTop={this.props.selectedTop}\r\n                        selectedBottom={this.props.selectedBottom}\r\n                        selectedLeft={this.props.selectedLeft}\r\n                        selectedRight={this.props.selectedRight}\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.isInputing ?\r\n                        <DataInput\r\n                            getData={this.props.getData}\r\n                            setData={this.props.setData}\r\n                            rowIndex={this.state.inputRowIndex}\r\n                            columnIndex={this.state.inputColumnIndex}\r\n                            submit={this.handleInputSubmit}\r\n                            initialValue={this.inputInitialValue}\r\n                        />\r\n                        : ''\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Content;","import React from \"react\";\r\n\r\nimport { HeaderHorizontalHeight, HeaderVerticalWidth } from \"../../../Constants\";\r\n\r\nclass HeaderCorner extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                style={\r\n                    {\r\n                        width: HeaderVerticalWidth,\r\n                        height: HeaderHorizontalHeight,\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        left: 0,\r\n                        boxSizing: \"border-box\",\r\n                        borderBottom: \"1px solid #dfdfdf\",\r\n                        borderRight: \"1px solid #dfdfdf\"\r\n                    }\r\n                }>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default HeaderCorner;","import React from \"react\";\r\nimport {\r\n    CellHeight,\r\n    CellWidth,\r\n    ColumnsPerPage,\r\n    DirectionType,\r\n    HeaderHorizontalHeight,\r\n    HeaderVerticalWidth,\r\n    RowsPerPage\r\n} from \"../../../Constants\";\r\n\r\ninterface IHHContainerProp {\r\n    type: DirectionType,\r\n    headerRef: React.RefObject<HTMLDivElement>,\r\n    holdPagesNum: number\r\n}\r\n\r\n/**\r\n * 盛装表头单元格的容器\r\n */\r\nclass CellsContainer extends React.Component<IHHContainerProp> {\r\n    render() {\r\n        return (\r\n            <div ref={this.props.headerRef}\r\n                style={this.props.type === DirectionType.HORIZONTAL ? {\r\n                    overflow: \"hidden\",\r\n                    position: \"absolute\",\r\n                    left: HeaderVerticalWidth,\r\n                    top: 0,\r\n                    height: HeaderHorizontalHeight,\r\n                    width: `calc(100% - ${HeaderVerticalWidth}px)`\r\n                } : {\r\n                    overflow: \"hidden\",\r\n                    position: \"absolute\",\r\n                    left: 0,\r\n                    right: 0,\r\n                    height: \"100%\",\r\n                    width: HeaderVerticalWidth\r\n                }}\r\n            >\r\n\r\n                <div\r\n                    style={this.props.type === DirectionType.HORIZONTAL ? {\r\n                        height: \"100%\",\r\n                        width: this.props.holdPagesNum * ColumnsPerPage * CellWidth\r\n                    } : {\r\n                        height: this.props.holdPagesNum * RowsPerPage * CellHeight,\r\n                        width: \"100%\"\r\n                    }}\r\n                >\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CellsContainer;","const ACode = \"A\".charCodeAt(0);\r\n\r\nexport function toName(index: number) {\r\n    let columnName = \"\";\r\n    index--;\r\n    do {\r\n        if (columnName.length > 0) {\r\n            index--;\r\n        }\r\n        columnName = String.fromCharCode(index % 26 + ACode) + columnName;\r\n        index = (index - index % 26) / 26;\r\n    } while (index > 0);\r\n    return columnName;\r\n}\r\n\r\nexport function toIndex(columnName: string) {\r\n    let index = 0;\r\n    let charsLenght = columnName.length;\r\n    for (let i = 0; i < charsLenght; i++) {\r\n        index += (columnName.charCodeAt(0) - ACode + 1) * Math.pow(26, charsLenght - i - 1);\r\n    }\r\n\r\n    return index;\r\n}","import React from \"react\";\r\n\r\nimport { CellHeight, CellWidth, DirectionType, HeaderHorizontalHeight, HeaderVerticalWidth } from \"../../../Constants\";\r\nimport { toName } from \"../../../Commons/utils\";\r\n\r\ninterface IHeaderCellProps {\r\n    type: DirectionType,\r\n    index: number,\r\n    selectedStart: number,\r\n    selectedEnd: number\r\n}\r\n\r\nclass HeaderCell extends React.Component<IHeaderCellProps> {\r\n    selectedStyle: React.CSSProperties;\r\n\r\n    commonStyle: React.CSSProperties = {\r\n        position: \"relative\",\r\n        fontSize: 12,\r\n        textAlign: \"center\",\r\n    }\r\n\r\n    constructor(props: IHeaderCellProps) {\r\n        super(props);\r\n        this.selectedStyle = this.props.type === DirectionType.HORIZONTAL ? \r\n            {\r\n                backgroundColor: \"#e0e0e0\",\r\n                color: \"#2979ff\",\r\n                fontWeight: \"bold\",\r\n                borderBottom: \"2px solid #2979ff\"\r\n            } : {\r\n                backgroundColor: \"#e0e0e0\",\r\n                color: \"#2979ff\",\r\n                fontWeight: \"bold\",\r\n                borderRight: \"2px solid #2979ff\",\r\n            }\r\n    }\r\n    \r\n    render() {\r\n        const {type, index} = this.props;\r\n        const {selectedStart, selectedEnd} = this.props;\r\n\r\n        const isSelected = index >= Math.min(selectedStart, selectedEnd) && index <= Math.max(selectedStart, selectedEnd);\r\n\r\n        const selectedStyle = isSelected ? this.selectedStyle : {};\r\n\r\n        return (\r\n            <div \r\n                style={type === DirectionType.HORIZONTAL ? {\r\n                    height: HeaderHorizontalHeight,\r\n                    width: CellWidth,\r\n                    lineHeight: HeaderHorizontalHeight + \"px\",\r\n                    float: \"left\",\r\n                    boxSizing: \"border-box\",\r\n                    borderRight: \"1px solid #dfdfdf\",\r\n                    ...this.commonStyle,\r\n                    ...selectedStyle\r\n                } : {\r\n                    height: CellHeight,\r\n                    width: HeaderVerticalWidth,\r\n                    lineHeight: CellHeight + \"px\",\r\n                    boxSizing: \"border-box\",\r\n                    borderBottom: \"1px solid #dfdfdf\",\r\n                    ...this.commonStyle,\r\n                    ...selectedStyle\r\n                }\r\n            }>\r\n                {\r\n                    type === DirectionType.HORIZONTAL ? toName(index) : index\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default HeaderCell;","import React from \"react\";\r\nimport { ColumnsPerPage, DirectionType, HeaderHorizontalHeight, HeaderVerticalWidth, PageHeight, PageWidth, RowsPerPage } from \"../../../Constants\";\r\nimport HeaderCell from \"./HeaderCell\";\r\n\r\ninterface IHeaderPageProp {\r\n    type: DirectionType,\r\n    startIndex: number,\r\n    selectedStart: number,\r\n    selectedEnd: number\r\n}\r\n\r\nclass HeaderPage extends React.Component<IHeaderPageProp> {\r\n    render() {\r\n        const {type, startIndex} = this.props;\r\n        const cellsNum = type === DirectionType.HORIZONTAL ? ColumnsPerPage : RowsPerPage;\r\n        let cells = [];\r\n        for (let i = startIndex; i <= startIndex + cellsNum - 1; i++) {\r\n            cells.push(<HeaderCell key={i} type={type} index={i} selectedStart={this.props.selectedStart} selectedEnd={this.props.selectedEnd}/>);\r\n        }\r\n        return (\r\n            <div\r\n                style={ type === DirectionType.HORIZONTAL ? {\r\n                    float: \"left\",\r\n                    height: HeaderHorizontalHeight,\r\n                    width: PageWidth\r\n                } : {\r\n                    height: PageHeight,\r\n                    width: HeaderVerticalWidth\r\n                }}\r\n            >\r\n                {cells}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeaderPage;","import React from 'react'\r\n\r\nimport HeaderCorner from './Components/HeaderCorner';\r\nimport CellsContainer from './Components/CellsContainer';\r\nimport PlaceHolder from '../PlaceHolder';\r\nimport { ColumnsPerPage, DirectionType, HeaderHorizontalHeight } from '../../Constants';\r\nimport HeaderPage from './Components/HeaderPage';\r\n\r\ninterface IHeaderHorizontalProps {\r\n    // 表头部分的Ref，用于控制滚动\r\n    headerRef: React.RefObject<HTMLDivElement>,\r\n    // 当前显示的page序号\r\n    currentPageIndex: number,\r\n    // 预加载的page数量\r\n    preloadPageNum: number,\r\n    selectedStart: number,\r\n    selectedEnd: number\r\n}\r\n\r\ninterface IHeaderHorizontalState {\r\n\r\n}\r\n\r\nclass HeaderHorizontal extends React.Component<IHeaderHorizontalProps, IHeaderHorizontalState> {\r\n    render() {\r\n        const { currentPageIndex, preloadPageNum } = this.props;\r\n        // 占位符所占的page个数\r\n        const placeHolderPageNum = currentPageIndex - preloadPageNum - 1 > 0 ? currentPageIndex - preloadPageNum - 1 : 0;\r\n        // 起始的page编号\r\n        const startPageIndex = currentPageIndex - preloadPageNum > 0 ? currentPageIndex - preloadPageNum : 1;\r\n        // 结束的page编号\r\n        const endPageIndex = currentPageIndex + preloadPageNum;\r\n\r\n        let pages = [];\r\n        for (let i = startPageIndex; i <= endPageIndex; i++) {\r\n            pages.push(<HeaderPage key={i} type={DirectionType.HORIZONTAL} startIndex={ColumnsPerPage * (i - 1) + 1} \r\n                selectedStart={this.props.selectedStart} selectedEnd={this.props.selectedEnd}/>)\r\n        }\r\n\r\n        return (\r\n            <div style={{\r\n                height: HeaderHorizontalHeight,\r\n                width: \"100%\",\r\n                background: \"rgb(240, 240, 240)\",\r\n                position: \"relative\"\r\n            }}>\r\n\r\n                <HeaderCorner />\r\n\r\n                <CellsContainer\r\n                    type={DirectionType.HORIZONTAL}\r\n                    headerRef={this.props.headerRef}\r\n                    holdPagesNum={endPageIndex}\r\n                >\r\n                    <PlaceHolder type={DirectionType.HORIZONTAL} pageNum={placeHolderPageNum} />\r\n\r\n                    {pages}\r\n                </CellsContainer>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderHorizontal;","import React from \"react\";\r\nimport { DirectionType, HeaderVerticalWidth, RowsPerPage } from \"../../Constants\";\r\nimport CellsContainer from \"./Components/CellsContainer\";\r\nimport HeaderPage from \"./Components/HeaderPage\";\r\nimport PlaceHolder from \"../PlaceHolder\";\r\n\r\ninterface IHeaderVerticalProp {\r\n    headerRef: React.RefObject<HTMLDivElement>,\r\n    currentPageIndex: number,\r\n    preloadPageNum: number,\r\n    selectedStart: number,\r\n    selectedEnd: number\r\n}\r\n\r\ninterface IHeaderVerticalState {\r\n\r\n}\r\n\r\nclass HeaderVertical extends React.Component<IHeaderVerticalProp, IHeaderVerticalState> {\r\n    render() {\r\n        const { currentPageIndex, preloadPageNum } = this.props;\r\n        // 占位符所占的page个数\r\n        const placeHolderPageNum = currentPageIndex - preloadPageNum - 1 > 0 ? currentPageIndex - preloadPageNum - 1 : 0;\r\n        // 起始的page编号\r\n        const startPageIndex = currentPageIndex - preloadPageNum > 0 ? currentPageIndex - preloadPageNum : 1;\r\n        // 结束的page编号\r\n        const endPageIndex = currentPageIndex + preloadPageNum;\r\n\r\n        let pages = [];\r\n        for (let i = startPageIndex; i <= endPageIndex; i++) {\r\n            pages.push(<HeaderPage key={i} type={DirectionType.VERTICAL} startIndex={RowsPerPage * (i - 1) + 1}\r\n                selectedStart={this.props.selectedStart} selectedEnd={this.props.selectedEnd} />)\r\n        }\r\n\r\n        return (\r\n            <div style={{\r\n                height: \"100%\",\r\n                width: HeaderVerticalWidth,\r\n                background: \"rgb(240, 240, 240)\",\r\n                position: \"relative\"\r\n            }}>\r\n\r\n\r\n                    <CellsContainer\r\n                        type={DirectionType.VERTICAL}\r\n                        headerRef={this.props.headerRef}\r\n                        holdPagesNum={endPageIndex}\r\n                    >\r\n                        <PlaceHolder type={DirectionType.VERTICAL} pageNum={placeHolderPageNum} />\r\n\r\n                        {pages}\r\n                    </CellsContainer>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport { HeaderVertical };","import React from \"react\";\r\nimport Content from \"./Components/Content/Content\";\r\n\r\nimport HeaderHorizontal from './Components/Header/HeaderHorizontal'\r\nimport { HeaderVertical } from \"./Components/Header/HeaderVertical\";\r\nimport { CellHeight, CellWidth, HeaderHorizontalHeight, HeaderVerticalWidth, PageHeight, PageWidth } from \"./Constants\";\r\n\r\ninterface IState {\r\n    currentVerticalIndex: number,\r\n    currentHorizontalIndex: number,\r\n\r\n    // 选择的区域\r\n    selectedLeft: number,\r\n    selectedTop: number,\r\n    selectedRight: number,\r\n    selectedBottom: number\r\n}\r\n\r\ninterface IProp {\r\n    // 数据接口\r\n    getData: Function,\r\n    setData: Function,\r\n\r\n    preloadVerticalNum: number,\r\n    preloadHorizontalNum: number\r\n}\r\n\r\nclass SpreadSheet extends React.Component<IProp, IState> {\r\n    // 列标ref\r\n    horizontalHeaderRef: React.RefObject<HTMLDivElement>;\r\n    // 行标ref\r\n    verticalHeaderRef: React.RefObject<HTMLDivElement>;\r\n    // 内容ref\r\n    contentRef: React.RefObject<HTMLDivElement>;\r\n\r\n    // 内容限位，用于检测和触发动态加载\r\n    topSpacing: number;\r\n    bottomSpacing: number;\r\n    leftSpacing: number;\r\n    rightSpacing: number;\r\n\r\n    constructor(props: IProp) {\r\n        super(props);\r\n        this.state = {\r\n            currentHorizontalIndex: 1,\r\n            currentVerticalIndex: 1,\r\n            selectedLeft: 1,\r\n            selectedTop: 1,\r\n            selectedRight: 1,\r\n            selectedBottom: 1\r\n        }\r\n\r\n        this.horizontalHeaderRef = React.createRef();\r\n        this.verticalHeaderRef = React.createRef();\r\n        this.contentRef = React.createRef();\r\n\r\n        this.topSpacing = 0;\r\n        this.bottomSpacing = (1 + this.props.preloadVerticalNum) * PageHeight;\r\n        this.leftSpacing = 0;\r\n        this.rightSpacing = (1 + this.props.preloadHorizontalNum) * PageWidth;\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        // 更新页面限位信息\r\n        const { currentHorizontalIndex, currentVerticalIndex } = this.state;\r\n        const { preloadHorizontalNum, preloadVerticalNum } = this.props;\r\n\r\n        this.topSpacing = currentVerticalIndex - preloadVerticalNum - 1 > 0 ?\r\n            (currentVerticalIndex - preloadVerticalNum - 1) * PageHeight : 0;\r\n        this.bottomSpacing = (currentVerticalIndex + preloadVerticalNum) * PageHeight;\r\n        this.leftSpacing = currentHorizontalIndex - preloadHorizontalNum - 1 > 0 ?\r\n            (currentHorizontalIndex - preloadHorizontalNum - 1) * PageWidth : 0;\r\n        this.rightSpacing = (currentHorizontalIndex + preloadHorizontalNum) * PageWidth;\r\n    }\r\n\r\n    /**\r\n     * 根据x, y的位置更新页面信息\r\n     * @param x \r\n     * @param y \r\n     */\r\n    useAsCurrent = (x: number, y: number) => {\r\n        this.setState({\r\n            currentHorizontalIndex: Math.floor(x / PageWidth) + 1,\r\n            currentVerticalIndex: Math.floor(y / PageHeight) + 1\r\n        });\r\n    }\r\n\r\n    updateSelection = (top: number, bottom: number, left: number, right: number) => {\r\n        this.setState({\r\n            selectedTop: top > 0 ? top : 1,\r\n            selectedBottom: bottom > 0 ? bottom : 1,\r\n            selectedLeft: left > 0 ? left : 1,\r\n            selectedRight: right > 0 ? right : 1\r\n        })\r\n    }\r\n\r\n    updateData = (x: number, y: number, s: any) => {\r\n        this.props.setData(x, y, s);\r\n        this.setState({});\r\n    }\r\n\r\n    /**\r\n     * 判断是否需要重新加载数据范围\r\n     */\r\n    updateDisplayRange = () => {\r\n        const content = this.contentRef.current!;\r\n\r\n        let scrollX = content.scrollLeft;\r\n        let scrollY = content.scrollTop;\r\n        let clientWidth = content.clientWidth;\r\n        let clientHeight = content.clientHeight;\r\n\r\n        const deltaX = CellWidth * 3;\r\n        const deltaY = CellHeight * 3;\r\n        // 检查左边界\r\n        if (this.state.currentHorizontalIndex !== 1\r\n            && scrollX < this.leftSpacing + deltaX) {\r\n            this.useAsCurrent(scrollX, scrollY);\r\n        }\r\n        // 检查上边界\r\n        if (this.state.currentVerticalIndex !== 1\r\n            && scrollY < this.topSpacing + deltaY) {\r\n            this.useAsCurrent(scrollX, scrollY);\r\n        }\r\n        // 检查右边界\r\n        if (scrollX + clientWidth > this.rightSpacing - deltaX) {\r\n            this.useAsCurrent(scrollX, scrollY);\r\n        }\r\n        // 检查下边界\r\n        if (scrollY + clientHeight > this.bottomSpacing - deltaY) {\r\n            this.useAsCurrent(scrollX, scrollY);\r\n        }\r\n    }\r\n\r\n    handleScroll = () => {\r\n        const content = this.contentRef.current!;\r\n        const hHeader = this.horizontalHeaderRef.current!;\r\n        const vHeader = this.verticalHeaderRef.current!;\r\n\r\n        // 滚动行标和列标\r\n        let scrollX = content.scrollLeft;\r\n        let scrollY = content.scrollTop;\r\n        hHeader.scrollTo(scrollX, 0);\r\n        vHeader.scrollTo(0, scrollY);\r\n\r\n        this.updateDisplayRange();\r\n    }\r\n\r\n    render() {\r\n        const { currentHorizontalIndex, currentVerticalIndex } = this.state;\r\n        const { preloadHorizontalNum, preloadVerticalNum } = this.props;\r\n\r\n        return (\r\n            <div style={{\r\n                position: \"relative\",\r\n                width: \"100%\",\r\n                height: \"100%\"\r\n            }}>\r\n                <HeaderHorizontal headerRef={this.horizontalHeaderRef}\r\n                    currentPageIndex={currentHorizontalIndex}\r\n                    preloadPageNum={preloadHorizontalNum}\r\n                    selectedStart={this.state.selectedLeft}\r\n                    selectedEnd={this.state.selectedRight}\r\n                />\r\n\r\n                <div style={{\r\n                    position: \"absolute\",\r\n                    top: HeaderHorizontalHeight,\r\n                    bottom: 0,\r\n                    left: 0,\r\n                    width: \"100%\"\r\n                }}>\r\n                    <div style={{ height: \"100%\", width: HeaderVerticalWidth }}>\r\n                        <HeaderVertical\r\n                            headerRef={this.verticalHeaderRef}\r\n                            selectedStart={this.state.selectedTop}\r\n                            selectedEnd={this.state.selectedBottom}\r\n                            currentPageIndex={currentVerticalIndex}\r\n                            preloadPageNum={preloadVerticalNum} />\r\n                    </div>\r\n\r\n                    <div\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            left: HeaderVerticalWidth,\r\n                            right: 0,\r\n                            top: 0,\r\n                            bottom: 0\r\n                        }}\r\n                    >\r\n\r\n                        <Content\r\n                            contentRef={this.contentRef}\r\n                            currentHorizontalIndex={currentHorizontalIndex}\r\n                            preloadHorizontalNum={preloadHorizontalNum}\r\n                            currentVerticalIndex={currentVerticalIndex}\r\n                            preloadVerticalNum={preloadVerticalNum}\r\n\r\n                            onScroll={this.handleScroll}\r\n\r\n                            getData={this.props.getData}\r\n                            setData={this.updateData}\r\n\r\n                            changeSelection={this.updateSelection}\r\n\r\n                            selectedTop={this.state.selectedTop}\r\n                            selectedBottom={this.state.selectedBottom}\r\n                            selectedLeft={this.state.selectedLeft}\r\n                            selectedRight={this.state.selectedRight}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SpreadSheet;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport SpreadSheet from './SpreadSheet'\n\nclass App extends React.Component<{}> {\n    data: Array<Array<any>>;\n\n    constructor(props: any) {\n        super(props);\n        this.data = new Array(100);\n        for (let i = 0; i < 100; i++) this.data[i] = [];\n        this.data[1][1] = 1;\n        this.data[31][256] = 2;\n    }\n\n    getData = (x: number, y: number) => {\n        if (this.data[x - 1] !== undefined) {\n            if (this.data[x - 1][y - 1] !== undefined) {\n                return this.data[x - 1][y - 1];\n            }\n        }\n\n        return null;\n    }\n\n    setData = (x: number, y: number, s: any) => {\n        if (this.data[x - 1] === undefined) {\n            this.data[x - 1] = [];\n        }\n        this.data[x - 1][y - 1] = s;\n    }\n\n    render() {\n        return (\n            <div style={{\n                position: \"absolute\",\n                width: \"100%\",\n                top: 0,\n                left: 0,\n                bottom: 0\n            }}>\n                <SpreadSheet\n                    getData={this.getData}\n                    setData={this.setData}\n                    preloadHorizontalNum={2}\n                    preloadVerticalNum={2}\n                />\n            </div>\n        )\n    }\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}